basePath: /
definitions:
  models.CreateResumeRequest:
    properties:
      metadata:
        $ref: '#/definitions/models.JSONB'
      raw_text:
        type: string
    required:
    - raw_text
    type: object
  models.JSONB:
    additionalProperties: true
    type: object
  models.Product:
    description: Product information
    properties:
      created_at:
        example: "2025-01-01T00:00:00Z"
        type: string
      description:
        example: Latest iPhone model with pro camera system
        type: string
      id:
        example: 1
        type: integer
      seller_id:
        example: 1
        type: integer
      title:
        example: iPhone 13 Pro
        type: string
      updated_at:
        example: "2025-01-01T00:00:00Z"
        type: string
    required:
    - seller_id
    - title
    type: object
  models.Resume:
    properties:
      created_at:
        type: string
      id:
        example: 1
        type: integer
      metadata:
        $ref: '#/definitions/models.JSONB'
      raw_text:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample e-commerce server.
  title: E-commerce API
  version: "1.0"
paths:
  /api/v1/products:
    get:
      consumes:
      - application/json
      description: Get a list of all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product happily
      parameters:
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
      summary: Create a product
      tags:
      - products
  /api/v1/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Get a product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Update a product
      tags:
      - products
  /api/v1/resume:
    get:
      consumes:
      - application/json
      description: Get a list of all resumes
      parameters:
      - description: API Key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Resume'
            type: array
      summary: List all resumes
      tags:
      - resume
    post:
      consumes:
      - application/json
      description: Create a new resume with the provided data
      parameters:
      - description: API Key
        in: header
        name: Authorization
        required: true
        type: string
      - description: Resume Data
        in: body
        name: resume
        required: true
        schema:
          $ref: '#/definitions/models.CreateResumeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Resume'
      summary: Create a new resume
      tags:
      - resume
  /api/v1/resume/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a resume by its ID
      parameters:
      - description: API Key
        in: header
        name: Authorization
        required: true
        type: string
      - description: Resume ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a resume
      tags:
      - resume
    get:
      consumes:
      - application/json
      description: Get a resume by its ID
      parameters:
      - description: API Key
        in: header
        name: Authorization
        required: true
        type: string
      - description: Resume ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Resume'
      summary: Get a resume by ID
      tags:
      - resume
    put:
      consumes:
      - application/json
      description: Update a resume by its ID
      parameters:
      - description: API Key
        in: header
        name: Authorization
        required: true
        type: string
      - description: Resume ID
        in: path
        name: id
        required: true
        type: string
      - description: Resume Data
        in: body
        name: resume
        required: true
        schema:
          $ref: '#/definitions/models.Resume'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Resume'
      summary: Update a resume
      tags:
      - resume
schemes:
- http
swagger: "2.0"
